version: 2.1

orbs: 
  python: circleci/python@2.1.1

jobs:
# ===================================================== FIRST JOB CREATE & ACTIVATE ENV THEN INSTALL ALL DEPENDENCIES

  install-and-test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip

      - run:
          name: Linting
          command: flake8

      - run:
          name: Testing
          command: pytest

# ================================== SECOND JOB BUILD & PUSH DOCKER IMAGE TO DOCKER HUB

  build-docker-image: 
    executor: python/default
    resource_class: medium
    steps:
      # 1. Login to DockerHub
      # 2. Build the image
      # 3. Tag it with hash circle ci ($CIRCLE_SHA1)
      # 4. Push the Docker image to the registry
      - checkout
      - setup_remote_docker: # This create a new remote Docker environment 
          docker_layer_caching: true
      - run:
          name: build and deploy to dockerhub
          command: |
            echo $DOCKERHUB_TOKEN | docker login --username $DOCKERHUB_USER --password-stdin
            docker build -t $IMAGE_NAME .
            docker tag $IMAGE_NAME:latest $DOCKERHUB_USER/$IMAGE_NAME:$CIRCLE_SHA1
            docker push $DOCKERHUB_USER/$IMAGE_NAME:$CIRCLE_SHA1

# ================================== THIRD JOB DEPLOY TO HEROKU

  deploy-to-heroku:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          # 1. Install Heroku CLI on the build machine
          # 2. Login to Heroku registry passing our Heroku API Key as a parameter
          #    to donâ€™t need to authenticate with the Heroku login command. 
          # 3. Building and pushing our docker image to Heroku registry
          # 4. Releasing the new version of our app
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=$HEROKU_API_KEY heroku container:login
            HEROKU_API_KEY=$HEROKU_API_KEY heroku container:push -a $HEROKU_APP_NAME web
            HEROKU_API_KEY=$HEROKU_API_KEY heroku container:release -a $HEROKU_APP_NAME web

# ===================================================== WORKFLOWS DEFINES THE ORDER'S RUNNING JOBS AND THEIR OPTIONS

workflows:
  mainflow:
    jobs:
      - install-and-test
      - build-docker-image:
          context:
            - oc-lettings
          requires:
            - install-and-test # only runs this job if the install-and-test job is completed
          filters:
            branches:
              only:
                - main # only runs this job if push on main branch
      - deploy-to-heroku:
          context:
            - oc-lettings
          requires:
            - build-docker-image
          filters:
            branches:
              only: main
